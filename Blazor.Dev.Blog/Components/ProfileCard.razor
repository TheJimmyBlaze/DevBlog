@using Models;
@using Services;
@inject ProfileService ProfileService;

    <div class="card bg-dark shadow-sm w-100 h-100">
        @if (profile != null)
        {
            <div class="card-img-top d-flex align-items-center justify-content-center blog-geometric-background">
                <div class="m-2 m-xl-3 p-2 p-xl-3 bg-dark shadow rounded-circle">
                    <img src="@ProfileService.GetImagePath(profile)" class="shadow rounded-circle" />
                </div>
            </div>
        }

        <div class="card-body d-flex flex-column">
            @if (profile == null)
            {
                <div class="container bg-secondary rounded my-auto py-3">
                    <h6 class="text">Loading profile...</h6>
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" style="width:100%"></div>
                    </div>
                </div>
            }
            else
            {
                <h3 class="card-title mb-0">@profile.Name</h3>
                <h6 class="text-muted">@profile.Location</h6>

                <p class="card-text my-auto py-3">@profile.Blurb</p>

                <div class="btn-group mt-auto">
                    <a href="@ProfileService.GetMailToAddress(profile)" class="btn btn-primary"><i class="h3 my-auto fas fa-envelope"></i></a>
                    <a href="@profile.Github" target="_blank" class="btn btn-primary"><i class="h3 my-auto fab fa-github-square"></i></a>
                    <a href="@profile.LinkedIn" target="_blank" class="btn btn-primary"><i class="h3 my-auto fab fa-linkedin"></i></a>
                </div>
            }
        </div>
    </div>

@code {
    [Parameter]
    public string ProfileJsonPath { get; set; }

    private Profile profile;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            profile = await ProfileService.GetProfileAsync(ProfileJsonPath);
            StateHasChanged();
        }
    }
}
