@using Models;
@using Services;
@inject PostService PostService;

<div class="card shadow-sm w-100 h-100" style="background: url(/images/Posts/ProjectFactory/MannorCropped.png); background-size: cover; background-position: center">
    <div class="card-body row no-gutters justify-content-end p-0 rounded-right blog-latest-update-card-content">
        <div class="col-6 col-lg-4 bg-dark p-2 p-xl-3 text-right shadow-sm d-flex flex-column">
            <div class="container-fluid d-inline align-content-end">
                <a href="#" class="badge badge-primary mx-1">Factory</a>
                <a href="#" class="badge badge-info mx-1">Unity</a>
                <a href="#" class="badge badge-info mx-1">MagicaVoxel</a>
            </div>

            <h4 class="mb-0">Project: Factory</h4>
            <h6 class="text-muted">Building the Mannor</h6>

            <div class="container-fluid mt-auto py-3">
                <p class="card-text text-center">
                    @post?.Blurb
                </p>
                <h6 class="text-muted">2/12/2019</h6>
            </div>

            <div class="container-fluid text-right mt-auto">
                <button type="button" class="btn btn-primary btn-block">Read More</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string PostNaturalID { get; set; }

    private Post post;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(1200); //Look busy

            post = await PostService.GetPost(PostNaturalID);
            StateHasChanged();
        }
    }
}
